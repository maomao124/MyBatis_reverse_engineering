<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.TeacherMapper">
    <resultMap id="BaseResultMap" type="data.Teacher">
        <id column="teacher_no" jdbcType="BIGINT" property="teacherNo"/>
        <result column="teacher_name" jdbcType="VARCHAR" property="teacherName"/>
        <result column="teacher_sex" jdbcType="VARCHAR" property="teacherSex"/>
        <result column="teacher_telephone_number" jdbcType="VARCHAR" property="teacherTelephoneNumber"/>
        <result column="teacher_email" jdbcType="VARCHAR" property="teacherEmail"/>
        <result column="teacher_address" jdbcType="VARCHAR" property="teacherAddress"/>
        <result column="teacher_idcard" jdbcType="VARCHAR" property="teacherIdcard"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        teacher_no, teacher_name, teacher_sex, teacher_telephone_number, teacher_email, teacher_address,
    teacher_idcard
    </sql>
    <select id="selectByExample" parameterType="data.TeacherExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from teacher
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from teacher
        where teacher_no = #{teacherNo,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from teacher
        where teacher_no = #{teacherNo,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="data.TeacherExample">
        delete from teacher
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="data.Teacher">
        insert into teacher (teacher_no, teacher_name, teacher_sex,
                             teacher_telephone_number, teacher_email, teacher_address,
                             teacher_idcard)
        values (#{teacherNo,jdbcType=BIGINT}, #{teacherName,jdbcType=VARCHAR}, #{teacherSex,jdbcType=VARCHAR},
                #{teacherTelephoneNumber,jdbcType=VARCHAR}, #{teacherEmail,jdbcType=VARCHAR},
                #{teacherAddress,jdbcType=VARCHAR},
                #{teacherIdcard,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="data.Teacher">
        insert into teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacherNo != null">
                teacher_no,
            </if>
            <if test="teacherName != null">
                teacher_name,
            </if>
            <if test="teacherSex != null">
                teacher_sex,
            </if>
            <if test="teacherTelephoneNumber != null">
                teacher_telephone_number,
            </if>
            <if test="teacherEmail != null">
                teacher_email,
            </if>
            <if test="teacherAddress != null">
                teacher_address,
            </if>
            <if test="teacherIdcard != null">
                teacher_idcard,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacherNo != null">
                #{teacherNo,jdbcType=BIGINT},
            </if>
            <if test="teacherName != null">
                #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="teacherSex != null">
                #{teacherSex,jdbcType=VARCHAR},
            </if>
            <if test="teacherTelephoneNumber != null">
                #{teacherTelephoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="teacherEmail != null">
                #{teacherEmail,jdbcType=VARCHAR},
            </if>
            <if test="teacherAddress != null">
                #{teacherAddress,jdbcType=VARCHAR},
            </if>
            <if test="teacherIdcard != null">
                #{teacherIdcard,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="data.TeacherExample" resultType="java.lang.Long">
        select count(*) from teacher
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update teacher
        <set>
            <if test="row.teacherNo != null">
                teacher_no = #{row.teacherNo,jdbcType=BIGINT},
            </if>
            <if test="row.teacherName != null">
                teacher_name = #{row.teacherName,jdbcType=VARCHAR},
            </if>
            <if test="row.teacherSex != null">
                teacher_sex = #{row.teacherSex,jdbcType=VARCHAR},
            </if>
            <if test="row.teacherTelephoneNumber != null">
                teacher_telephone_number = #{row.teacherTelephoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="row.teacherEmail != null">
                teacher_email = #{row.teacherEmail,jdbcType=VARCHAR},
            </if>
            <if test="row.teacherAddress != null">
                teacher_address = #{row.teacherAddress,jdbcType=VARCHAR},
            </if>
            <if test="row.teacherIdcard != null">
                teacher_idcard = #{row.teacherIdcard,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update teacher
        set teacher_no = #{row.teacherNo,jdbcType=BIGINT},
        teacher_name = #{row.teacherName,jdbcType=VARCHAR},
        teacher_sex = #{row.teacherSex,jdbcType=VARCHAR},
        teacher_telephone_number = #{row.teacherTelephoneNumber,jdbcType=VARCHAR},
        teacher_email = #{row.teacherEmail,jdbcType=VARCHAR},
        teacher_address = #{row.teacherAddress,jdbcType=VARCHAR},
        teacher_idcard = #{row.teacherIdcard,jdbcType=VARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="data.Teacher">
        update teacher
        <set>
            <if test="teacherName != null">
                teacher_name = #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="teacherSex != null">
                teacher_sex = #{teacherSex,jdbcType=VARCHAR},
            </if>
            <if test="teacherTelephoneNumber != null">
                teacher_telephone_number = #{teacherTelephoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="teacherEmail != null">
                teacher_email = #{teacherEmail,jdbcType=VARCHAR},
            </if>
            <if test="teacherAddress != null">
                teacher_address = #{teacherAddress,jdbcType=VARCHAR},
            </if>
            <if test="teacherIdcard != null">
                teacher_idcard = #{teacherIdcard,jdbcType=VARCHAR},
            </if>
        </set>
        where teacher_no = #{teacherNo,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="data.Teacher">
        update teacher
        set teacher_name             = #{teacherName,jdbcType=VARCHAR},
            teacher_sex              = #{teacherSex,jdbcType=VARCHAR},
            teacher_telephone_number = #{teacherTelephoneNumber,jdbcType=VARCHAR},
            teacher_email            = #{teacherEmail,jdbcType=VARCHAR},
            teacher_address          = #{teacherAddress,jdbcType=VARCHAR},
            teacher_idcard           = #{teacherIdcard,jdbcType=VARCHAR}
        where teacher_no = #{teacherNo,jdbcType=BIGINT}
    </update>
</mapper>