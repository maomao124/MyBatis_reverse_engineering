<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.LoginLogMapper">
    <resultMap id="BaseResultMap" type="data.LoginLog">
        <id column="log_no" jdbcType="BIGINT" property="logNo"/>
        <result column="log_time" jdbcType="VARCHAR" property="logTime"/>
        <result column="log_login_no" jdbcType="BIGINT" property="logLoginNo"/>
        <result column="log_name" jdbcType="VARCHAR" property="logName"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        log_no, log_time, log_login_no, log_name
    </sql>
    <select id="selectByExample" parameterType="data.LoginLogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from login_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from login_log
        where log_no = #{logNo,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from login_log
        where log_no = #{logNo,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="data.LoginLogExample">
        delete from login_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="data.LoginLog">
        insert into login_log (log_no, log_time, log_login_no,
                               log_name)
        values (#{logNo,jdbcType=BIGINT}, #{logTime,jdbcType=VARCHAR}, #{logLoginNo,jdbcType=BIGINT},
                #{logName,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="data.LoginLog">
        insert into login_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="logNo != null">
                log_no,
            </if>
            <if test="logTime != null">
                log_time,
            </if>
            <if test="logLoginNo != null">
                log_login_no,
            </if>
            <if test="logName != null">
                log_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logNo != null">
                #{logNo,jdbcType=BIGINT},
            </if>
            <if test="logTime != null">
                #{logTime,jdbcType=VARCHAR},
            </if>
            <if test="logLoginNo != null">
                #{logLoginNo,jdbcType=BIGINT},
            </if>
            <if test="logName != null">
                #{logName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="data.LoginLogExample" resultType="java.lang.Long">
        select count(*) from login_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update login_log
        <set>
            <if test="row.logNo != null">
                log_no = #{row.logNo,jdbcType=BIGINT},
            </if>
            <if test="row.logTime != null">
                log_time = #{row.logTime,jdbcType=VARCHAR},
            </if>
            <if test="row.logLoginNo != null">
                log_login_no = #{row.logLoginNo,jdbcType=BIGINT},
            </if>
            <if test="row.logName != null">
                log_name = #{row.logName,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update login_log
        set log_no = #{row.logNo,jdbcType=BIGINT},
        log_time = #{row.logTime,jdbcType=VARCHAR},
        log_login_no = #{row.logLoginNo,jdbcType=BIGINT},
        log_name = #{row.logName,jdbcType=VARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="data.LoginLog">
        update login_log
        <set>
            <if test="logTime != null">
                log_time = #{logTime,jdbcType=VARCHAR},
            </if>
            <if test="logLoginNo != null">
                log_login_no = #{logLoginNo,jdbcType=BIGINT},
            </if>
            <if test="logName != null">
                log_name = #{logName,jdbcType=VARCHAR},
            </if>
        </set>
        where log_no = #{logNo,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="data.LoginLog">
        update login_log
        set log_time     = #{logTime,jdbcType=VARCHAR},
            log_login_no = #{logLoginNo,jdbcType=BIGINT},
            log_name     = #{logName,jdbcType=VARCHAR}
        where log_no = #{logNo,jdbcType=BIGINT}
    </update>
</mapper>