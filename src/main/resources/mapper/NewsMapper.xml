<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.NewsMapper">
    <resultMap id="BaseResultMap" type="data.News">
        <id column="new_no" jdbcType="BIGINT" property="newNo"/>
        <result column="new_author" jdbcType="VARCHAR" property="newAuthor"/>
        <result column="new_identity" jdbcType="VARCHAR" property="newIdentity"/>
        <result column="new_time" jdbcType="VARCHAR" property="newTime"/>
        <result column="new_title" jdbcType="VARCHAR" property="newTitle"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="data.News">
        <result column="new_text" jdbcType="LONGVARCHAR" property="newText"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        new_no, new_author, new_identity, new_time, new_title
    </sql>
    <sql id="Blob_Column_List">
        new_text
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="data.NewsExample" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from news
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="data.NewsExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from news
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from news
        where new_no = #{newNo,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from news
        where new_no = #{newNo,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="data.NewsExample">
        delete from news
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="data.News">
        insert into news (new_no, new_author, new_identity,
                          new_time, new_title, new_text)
        values (#{newNo,jdbcType=BIGINT}, #{newAuthor,jdbcType=VARCHAR}, #{newIdentity,jdbcType=VARCHAR},
                #{newTime,jdbcType=VARCHAR}, #{newTitle,jdbcType=VARCHAR}, #{newText,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="data.News">
        insert into news
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="newNo != null">
                new_no,
            </if>
            <if test="newAuthor != null">
                new_author,
            </if>
            <if test="newIdentity != null">
                new_identity,
            </if>
            <if test="newTime != null">
                new_time,
            </if>
            <if test="newTitle != null">
                new_title,
            </if>
            <if test="newText != null">
                new_text,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="newNo != null">
                #{newNo,jdbcType=BIGINT},
            </if>
            <if test="newAuthor != null">
                #{newAuthor,jdbcType=VARCHAR},
            </if>
            <if test="newIdentity != null">
                #{newIdentity,jdbcType=VARCHAR},
            </if>
            <if test="newTime != null">
                #{newTime,jdbcType=VARCHAR},
            </if>
            <if test="newTitle != null">
                #{newTitle,jdbcType=VARCHAR},
            </if>
            <if test="newText != null">
                #{newText,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="data.NewsExample" resultType="java.lang.Long">
        select count(*) from news
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update news
        <set>
            <if test="row.newNo != null">
                new_no = #{row.newNo,jdbcType=BIGINT},
            </if>
            <if test="row.newAuthor != null">
                new_author = #{row.newAuthor,jdbcType=VARCHAR},
            </if>
            <if test="row.newIdentity != null">
                new_identity = #{row.newIdentity,jdbcType=VARCHAR},
            </if>
            <if test="row.newTime != null">
                new_time = #{row.newTime,jdbcType=VARCHAR},
            </if>
            <if test="row.newTitle != null">
                new_title = #{row.newTitle,jdbcType=VARCHAR},
            </if>
            <if test="row.newText != null">
                new_text = #{row.newText,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update news
        set new_no = #{row.newNo,jdbcType=BIGINT},
        new_author = #{row.newAuthor,jdbcType=VARCHAR},
        new_identity = #{row.newIdentity,jdbcType=VARCHAR},
        new_time = #{row.newTime,jdbcType=VARCHAR},
        new_title = #{row.newTitle,jdbcType=VARCHAR},
        new_text = #{row.newText,jdbcType=LONGVARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update news
        set new_no = #{row.newNo,jdbcType=BIGINT},
        new_author = #{row.newAuthor,jdbcType=VARCHAR},
        new_identity = #{row.newIdentity,jdbcType=VARCHAR},
        new_time = #{row.newTime,jdbcType=VARCHAR},
        new_title = #{row.newTitle,jdbcType=VARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="data.News">
        update news
        <set>
            <if test="newAuthor != null">
                new_author = #{newAuthor,jdbcType=VARCHAR},
            </if>
            <if test="newIdentity != null">
                new_identity = #{newIdentity,jdbcType=VARCHAR},
            </if>
            <if test="newTime != null">
                new_time = #{newTime,jdbcType=VARCHAR},
            </if>
            <if test="newTitle != null">
                new_title = #{newTitle,jdbcType=VARCHAR},
            </if>
            <if test="newText != null">
                new_text = #{newText,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where new_no = #{newNo,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="data.News">
        update news
        set new_author   = #{newAuthor,jdbcType=VARCHAR},
            new_identity = #{newIdentity,jdbcType=VARCHAR},
            new_time     = #{newTime,jdbcType=VARCHAR},
            new_title    = #{newTitle,jdbcType=VARCHAR},
            new_text     = #{newText,jdbcType=LONGVARCHAR}
        where new_no = #{newNo,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="data.News">
        update news
        set new_author   = #{newAuthor,jdbcType=VARCHAR},
            new_identity = #{newIdentity,jdbcType=VARCHAR},
            new_time     = #{newTime,jdbcType=VARCHAR},
            new_title    = #{newTitle,jdbcType=VARCHAR}
        where new_no = #{newNo,jdbcType=BIGINT}
    </update>
</mapper>